function Mred_mdp_3RRRreturn = Mred_mdp_3RRR(qj_rad, xEE, mdp, l_all, r_BasisPla_MobPla)
    % Funktion für die Bestimmung der Matrix der Trägheitseffekte in Plattformkoordinaten
    % Eingabe:
    % qj_rad in rad: Gelenkkoordinaten (9x1)
    % xEE in m und rad: Plattform-Koordinaten im Basis-KS (6x1)
    %
    % Ausgabe:
    % Mred_mdp_3RRRreturn: Matrix der Trägheitseffekte in Plattformkoordinaten (3x3)
    
    % Aran Mohammad, aran.mohammad@imes.uni-hannover.de, 2022-12
    % (C) Institut für Mechatronische Systeme, Universität Hannover
  Mred = [0 0 0; 0 0 0; 0 0 0;];
  t1 = qj_rad(2);
  t2 = sin(t1);
  t3 = t2 ^ 2;
  t4 = qj_rad(8);
  t5 = sin(t4);
  t6 = t5 ^ 2;
  t7 = t6 * t3;
  t8 = l_all(2);
  t9 = t8 ^ 2;
  t11 = mdp(2);
  t12 = mdp(1) - t11;
  t13 = t12 * t9;
  t14 = qj_rad(4);
  t15 = qj_rad(5);
  t16 = pi / 0.6e1;
  t17 = t14 + t15 + t16;
  t18 = cos(t17);
  t19 = t18 ^ 2;
  t22 = t14 + t16;
  t23 = cos(t22);
  t25 = cos(t15);
  t26 = t25 * t3;
  t28 = l_all(1);
  t29 = t28 * t6;
  t30 = mdp(3);
  t31 = t30 * t8;
  t32 = t31 * t29;
  t35 = sin(t15);
  t36 = t35 ^ 2;
  t37 = t36 * t3;
  t38 = qj_rad(7);
  t39 = pi / 0.3e1;
  t40 = t38 + t4 + t39;
  t41 = sin(t40);
  t42 = t41 ^ 2;
  t45 = t38 + t39;
  t46 = sin(t45);
  t49 = cos(t4);
  t51 = t31 * t28 * t49;
  t54 = t23 ^ 2;
  t56 = t28 ^ 2;
  t58 = t11 * t56 * t6;
  t60 = t3 * t11;
  t61 = t46 ^ 2;
  t64 = qj_rad(1);
  t65 = t64 + t1;
  t66 = sin(t65);
  t67 = t66 ^ 2;
  t69 = cos(t1);
  t70 = t69 * t30;
  t71 = sin(t64);
  t73 = t8 * t28;
  t79 = t3 * t9 * mdp(4);
  t80 = t71 ^ 2;
  t89 = 0.1e1 / t56;
  t91 = 0.1e1 / t9;
  t93 = 0.1e1 / t3;
  t94 = 0.1e1 / t36;
  t96 = 0.1e1 / t6;
  t97 = t96 * t94 * t93;
  Mred(1,1) = t97 * t91 * t89 * (t19 * t13 * t7 - 0.2e1 * t32 * t26 * t23 * t18 + t42 * t13 * t37 - 0.2e1 * t51 * t37 * t46 * t41 + t58 * t3 * t54 + (t61 * t56 * t60 + (t67 * t13 - 0.2e1 * t66 * t73 * t71 * t70 + (t11 * t80 + t79) * t56) * t6) * t36);
  t98 = t12 * t8;
  t99 = sin(t17);
  t101 = t25 * t30;
  t102 = sin(t22);
  t106 = t8 * (-t101 * t102 * t28 + t98 * t99);
  t110 = t49 * t30;
  t113 = -t110 * t28 * t46 + t41 * t98;
  t116 = cos(t40);
  t122 = cos(t45);
  t135 = -t28 * t70 * t71 + t66 * t98;
  t137 = cos(t65);
  t139 = cos(t64);
  t145 = t11 * t28 * t71 - t66 * t70 * t8;
  Mred(1,2) = t97 * t91 * t89 * (t18 * t106 * t7 - t116 * t8 * t3 * t36 * t113 - t32 * t26 * t23 * t99 + t51 * t37 * t41 * t122 + t58 * t3 * t23 * t102 - (t122 * t46 * t56 * t60 + t6 * (t135 * t137 * t8 + t139 * t145 * t28)) * t36);
  t159 = xEE(6);
  t161 = cos(-t159 + t14 + t15);
  t165 = t8 * t36;
  t167 = cos(t64 + t1 - t159);
  t168 = t167 * t165;
  t172 = cos(t38 + t4 - t159);
  t175 = t3 * t101;
  t177 = cos(-t159 + t14);
  t178 = t177 * t6;
  t182 = t3 * t110;
  t184 = cos(-t159 + t38);
  t185 = t184 * t36;
  t189 = t28 * t60;
  t192 = t184 * t28;
  t196 = cos(-t159 + t64);
  t204 = r_BasisPla_MobPla(2);
  t209 = t96 * t94 * t93 * t91;
  Mred(1,3) = t209 * t89 * t204 * (-t161 * t8 * (-t101 * t23 * t28 + t18 * t98) * t7 - t168 * t135 * t6 + t172 * t8 * t113 * t37 - (-t18 * t8 * t178 * t175 + t41 * t8 * t185 * t182 + t23 * t178 * t189 + t36 * (t145 * t196 * t6 - t192 * t46 * t60)) * t28);
  Mred(2,1) = Mred(1,2);
  t210 = t116 ^ 2;
  t217 = t99 ^ 2;
  t224 = t122 ^ 2;
  t229 = t102 ^ 2;
  t232 = t137 ^ 2;
  t234 = t139 * t30;
  t239 = t139 ^ 2;
  Mred(2,2) = t97 * t91 * t89 * (t210 * t13 * t37 - 0.2e1 * t51 * t37 * t122 * t116 + t217 * t13 * t7 - 0.2e1 * t32 * t26 * t102 * t99 + t11 * t56 * t36 * t3 * t224 + t6 * (t229 * t56 * t60 + (t232 * t13 - 0.2e1 * t137 * t73 * t69 * t234 + (t11 * t239 + t79) * t56) * t36));
  t276 = t196 * t36;
  Mred(2,3) = -t209 * t89 * t204 * (t161 * t106 * t7 - t168 * (-t234 * t28 * t69 + t137 * t98) * t6 + t172 * t165 * (-t110 * t122 * t28 + t116 * t98) * t3 - (t116 * t8 * t185 * t182 + t99 * t8 * t178 * t175 - t122 * t185 * t189 + (-t102 * t177 * t28 * t60 + (t11 * t139 * t28 - t137 * t70 * t8) * t276) * t6) * t28);
  Mred(3,1) = Mred(1,3);
  Mred(3,2) = Mred(2,3);
  t291 = t204 ^ 2;
  t292 = t3 * t291;
  t294 = t12 * t6;
  t295 = t161 ^ 2;
  t301 = t291 * t31;
  t302 = t301 * t29;
  t307 = t167 ^ 2;
  t315 = t172 ^ 2;
  t323 = t291 * t11;
  t325 = t196 ^ 2;
  t328 = t177 ^ 2;
  t331 = t184 ^ 2;
  Mred(3,3) = t97 * t91 * t89 * (t295 * t294 * t9 * t292 - 0.2e1 * t302 * t177 * t25 * t161 * t3 + t307 * t294 * t9 * t36 * t291 - 0.2e1 * t302 * t276 * t69 * t167 + t315 * t13 * t36 * t292 - 0.2e1 * t301 * t192 * t49 * t172 * t37 + t56 * (t325 * t6 * t36 * t323 + t3 * (t328 * t6 * t323 + (t6 * t9 * mdp(5) + t323 * t331) * t36)));
  Mred_mdp_3RRRreturn = Mred;
